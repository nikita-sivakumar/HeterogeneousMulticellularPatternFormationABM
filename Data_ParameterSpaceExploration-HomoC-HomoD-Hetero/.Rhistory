library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("HomotypicHeterotypic_all_features_ratios.xlsx")
features = unique(all_features$Feature)
radii = unique(all_features$Radius)
all_features$Homotypic_Prob_C <- as.numeric(all_features$Homotypic_Prob_C)
all_features$Homotypic_Prob_D <- as.numeric(all_features$Homotypic_Prob_D)
all_features$Hetertoypic_Prob <- as.numeric(all_features$Heterotypic_Prob)
plot = list()
i = 1
for(i in 1:length(features)){
plot_data = subset(all_features, Feature == features[i] & Heterotypic_Prob == 0)
plot_data$Value <- as.numeric(plot_data$Value)
color = "blue"
if(str_contains(features[i],"green")){
color = "#75A245"
}
else if(str_contains(features[i],"red")){
color = "#BE2227"
}
plot_data_descriptive <- aggregate(plot_data$Value,
by = list(Homotypic_Prob_C=plot_data$Homotypic_Prob_C,Homotypic_Prob_D=plot_data$Homotypic_Prob_D),
FUN = function(x) c(mean(x), sd(x)))
plot_data_descriptive <- do.call(data.frame, plot_data_descriptive)
p = ggplot(plot_data_descriptive,aes(Homotypic_Prob_C,Homotypic_Prob_D,fill = x.1)) +
geom_tile() +
xlab("Homotypic_Prob_C") +
ylab("Homotypic_Prob_D") +
scale_fill_gradient(low="white",high=color) +
ggtitle(features[[i]])
# theme(xlab.text=element_text(size=14),legend.text=element_text(size=14),legend.text=element_text(size=14))
plot[[i]] = p
# p2 = ggplot() +
#    geom_point(data=plot_data, aes(x = factor(Homotypic_Prob), y = factor(Hetertoypic_Prob), color = Value), size=2,alpha=0.1) +
#    scale_color_continuous(limits=c(0,8)) +
#    xlab("Homotypic Probability") +
#    ylab("Heterotypic Probability")
# plot_data$Value <- as.numeric(plot_data$Value)
# plot_data_descriptive <- aggregate(plot_data$Value,
#                                    by = list(Homotypic_Prob = plot_data$Homotypic_Prob, Heterotypic_Prob = plot_data$Heterotypic_Prob),
#                                    FUN = function(x) c(mean(x), sd(x)))
# plot_data_descriptive <- do.call(data.frame, plot_data_descriptive)
# plot_ly(plot_data_descriptive,x=~Homotypic_Prob,y=~Heterotypic_Prob, z=~x.1)
#
# p1 = ggplot() +
#    geom_bar(data = plot_data_descriptive, aes(x = factor(C_Express_Delay), y = x.1, fill = factor(D_Express_Delay)),
#             stat = "identity", position=position_dodge()) +
#    geom_errorbar(data = plot_data_descriptive,
#                  aes (x = factor(C_Express_Delay), y = x.1, fill = factor(D_Express_Delay),
#                       ymin=x.1 - x.2, ymax=x.1 + x.2), width=.2,position=position_dodge(.9)) +
#    facet_grid(~ Ratio) +
#    xlab("N-Cad Expression Delay (ticks)") +
#    ylab(features[i]) +
#    labs(fill = "P-Cad Expression Offset (ticks)")
#
# plot_data$Value <- as.numeric(plot_data$Value)
# p2 = ggplot() +
#    geom_boxplot(data=plot_data, aes(x = factor(Cdel), y = Value, fill = factor(Ddel))) +
#    facet_grid(~ Ratio) +
#    labs(fill = "P-Cad Expression Offset (ticks)") +
#    xlab("N-Cad Expression Delay (ticks)") +
#    ylab(features[i])
# bar[[i]] = p1
# box[[i]] = p2
}
i = 1
for(i in 1:length(features)){
file1 = paste(outpath,features[i],"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(plot[[i]])
dev.off()
}
rm(list=ls())
setwd("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7")
outpath = paste("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7/")
library(readxl)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("labelled_spheroids.xlsx")
all_features$homo_c <- as.numeric(all_features$homo_c)
all_features$homo_d <- as.numeric(all_features$homo_d)
all_features$hetero <- as.numeric(all_features$hetero)
View(all_features)
sum(1,2)
sum(all_features$homo_c == 25 & all_features$homo_d == 25 & all_features$label == 0)
df1 %>% count(all_features$homo_c, all_features$label)
count(all_features$homo_c, all_features$label)
all_features %>% count(homo_c, label)
all_features %>% count(homo_c, homo_d, label)
View(all_features)
freq <- all_features %>% count(homo_c, homo_d, label)
View(freq)
freq$group <- as.character(freq$homo_c) + as.character(freq$homo_d)
freq$group <- freq$homo_c + freq$homo_d
freq$group <- toString(freq$homo_c) + toString(freq$homo_d)
freq%homo_c + ""
toString(freq$homo_c)
rm(list=ls())
setwd("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7")
outpath = paste("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7/")
library(readxl)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("labelled_spheroids.xlsx")
all_features %>% count(homo_c, homo_d, label)
freq <- all_features %>% count(homo_c, homo_d, label)
View(freq)
freq$group = freq$homo_c + freq$homo_d
View(freq)
freq$group = as.factor(freq$homo_c,freq$homo_d)
View(freq)
all_features$homo_c <- as.factor(all_features$homo_c)
all_features$homo_d <- as.factor(all_features$homo_d)
all_features$hetero <- as.factor(all_features$hetero)
freq <- all_features %>% count(homo_c, homo_d, label)
View(freq)
freq$homo_c + freq$homo_d
freq$homo_c,freq$homo_d
[freq$homo_c,freq$homo_d]
for(i in 1:length(freq)){}
freq <- all_features %>% count(homo_c, homo_d, label)
for(i in 1:length(freq)){
if(freq$homo_c == 25 & freq$homo_d == 25){
freq$group <- 1
}
if(freq$homo_c == 25 & freq$homo_d == 75){
freq$group <- 2
}
if(freq$homo_c == 75 & freq$homo_d == 25){
freq$group <- 3
}
if(freq$homo_c == 75 & freq$homo_d == 75){
freq$group <- 4
}
}
View(freq)
warnings()
for(i in 1:length(freq)){
if((freq$homo_c == 25) & (freq$homo_d == 25)){
freq$group <- 1
}
if((freq$homo_c == 25) & (freq$homo_d == 75)){
freq$group <- 2
}
if((freq$homo_c == 75) & (freq$homo_d == 25)){
freq$group <- 3
}
if((freq$homo_c == 75) & (freq$homo_d == 75)){
freq$group <- 4
}
}
View(freq)
warnings()
for(i in 1:length(freq)){
if((freq$homo_c == 25) && (freq$homo_d == 25)){
freq$group <- 1
}
if((freq$homo_c == 25) && (freq$homo_d == 75)){
freq$group <- 2
}
if((freq$homo_c == 75) && (freq$homo_d == 25)){
freq$group <- 3
}
if((freq$homo_c == 75) && (freq$homo_d == 75)){
freq$group <- 4
}
}
View(freq)
freq <- all_features %>% count(homo_c, homo_d, label)
for(i in 1:length(freq)){
if((freq$homo_c == 25) && (freq$homo_d == 25)){
freq$group <- 1
}
else if((freq$homo_c == 25) && (freq$homo_d == 75)){
freq$group <- 2
}
else if((freq$homo_c == 75) && (freq$homo_d == 25)){
freq$group <- 3
}
else if((freq$homo_c == 75) && (freq$homo_d == 75)){
freq$group <- 4
}
}
View(freq)
(freq$homo_c == 75) & (freq$homo_d == 75)
freq[1]
freq$homo_c[1]
freq$homo_c[1] == freq$homo_d[1]
for(i in 1:length(freq)){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group <- 4
}
}
View(freq)
i = 1
freq <- all_features %>% count(homo_c, homo_d, label)
for(i in 1:length(freq)){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
for(i in 1:length(freq)){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
View(freq)
(freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)
(freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)
length(freq)
size(freq)
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
View(freq)
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity")
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="stack", stat="identity")
file1 = paste(outpath,"graph2.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T)
file1 = paste(outpath,"graph2.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_viridis(discrete = T)
file1 = paste(outpath,"graph2.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity")
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(color=label, y=n, x=group)) +
geom_bar(position="color", stat="identity")
p = ggplot(freq, aes(color=label, y=n, x=group)) +
geom_bar(position="stack", stat="identity")
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity")
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
freq$label <- as.factor(freq$label)
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity")
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_manual(values=c("#A6CEE2", "#34A148", "#FDBE6E","#6B3E98","#B15A28"))
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_manual(values=c("#A6CEE2", "#B3D88F", "#F6999B","#F47E27","#684199","AF592F"))
rm(list=ls())
rm(list=ls())
setwd("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7")
outpath = paste("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7/")
library(readxl)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("labelled_spheroids.xlsx")
plot = list()
i = 1
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
freq$label <- as.factor(freq$label)
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
rm(list=ls())
setwd("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7")
outpath = paste("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7/")
library(readxl)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("labelled_spheroids.xlsx")
plot = list()
i = 1
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
freq$label <- as.factor(freq$label)
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_manual(values=c("#A6CEE2", "#B3D88F", "#F6999B","#F47E27","#684199","AF592F"))
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
rm(list=ls())
setwd("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7")
outpath = paste("/Users/niki/Dropbox/Nikita/College/Projects/Lazzara Lab/ABM_Wendell&Lim/Circuit_ABCD_Asymm_01/Output_3.1/Homotypic-Heterotypic_SensitivityAnalysis_7/")
library(readxl)
library(ggplot2)
library(plotly)
library(purrr)
library(tidyr)
library(dplyr)
library(plotly)
library(rPraat)
all_features <- read_excel ("labelled_spheroids.xlsx")
plot = list()
i = 1
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
freq$label <- as.factor(freq$label)
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_manual(values=c("#A6CEE2", "#B3D88F", "#F6999B","#F47E27","#684199","#AF592F"))
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
freq <- all_features %>% count(homo_c, homo_d, label)
freq$group <- freq$label
freq$label <- as.factor(freq$label)
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
for(i in 1:19){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
View(freq)
for(i in 1:23){
if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 25)){
freq$group[i] <- 1
}
else if((freq$homo_c[i] == 25) & (freq$homo_d[i] == 75)){
freq$group[i] <- 2
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 25)){
freq$group[i] <- 3
}
else if((freq$homo_c[i] == 75) & (freq$homo_d[i] == 75)){
freq$group[i] <- 4
}
}
p = ggplot(freq, aes(fill=label, y=n, x=group)) +
geom_bar(position="fill", stat="identity") +
scale_fill_manual(values=c("#A6CEE2", "#B3D88F", "#F6999B","#F47E27","#684199","#AF592F"))
file1 = paste(outpath,"graph.png", sep = "")
png(filename = file1, width = 1000, height = 1000)
print(p)
dev.off()
